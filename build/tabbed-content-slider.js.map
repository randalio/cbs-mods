{"version":3,"file":"tabbed-content-slider.js","mappings":"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","sources":["webpack://cbs-mods/./src/tabbed-content-slider.js"],"sourcesContent":["function homepageHero() {\n\n  console.log('homepageHero');\n  const windowWidth = window.innerWidth;\n  const hero = document.getElementById('home_hero');\n\n  if (hero) {\n\n    const dataVideoLg = hero.getAttribute('data-video-lg');\n    const dataVideoSm = hero.getAttribute('data-video-sm');\n\n\n    // check if video container already exists{\n    const existingVideoContainer = hero.querySelector('.kb-blocks-bg-video-container');\n  \n    \n    if (!existingVideoContainer) {\n      // preppend .kb-blocks-bg-video-container at start of #home_hero\n      const videoContainer = document.createElement('div');\n      videoContainer.classList.add('kb-blocks-bg-video-container');\n      hero.prepend(videoContainer);\n\n      // create video element\n      const videoElement = document.createElement('video');\n      videoElement.classList.add('kb-blocks-bg-video');\n      videoElement.setAttribute('autoplay', '');\n      videoElement.setAttribute('muted', '');\n      videoElement.setAttribute('loop', '');\n      videoElement.setAttribute('playsinline', '');\n      videoContainer.appendChild(videoElement);\n\n      // set video source based on window width\n      if (windowWidth < 768 && dataVideoSm) {\n\n          setTimeout(() => {\n            const sourceElement = document.createElement('source');\n                  sourceElement.setAttribute('src', dataVideoSm);\n                  sourceElement.setAttribute('type', 'video/mp4');\n                  videoElement.appendChild(sourceElement);\n          }, 1000);\n\n        \n      } else if (dataVideoLg) {\n        const sourceElement = document.createElement('source');\n        sourceElement.setAttribute('src', dataVideoLg);\n        sourceElement.setAttribute('type', 'video/mp4');\n        videoElement.appendChild(sourceElement);\n      }\n\n      //videoElement.load();\n\n    }\n\n    \n\n    \n\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n  // query #home_hero\n\n  const home = document.querySelector('body.home') ? true : false;\n\n  if(home){\n    homepageHero();\n  \n    // Optional: run again on resize\n    window.addEventListener('resize', homepageHero);\n\n\n        // Initialize your Swipers\n        const servicesContentSwiper = new Swiper('.services_slider_content .swiper', {\n          allowTouchMove: false,\n          speed: 500,\n        });\n      \n        const servicesImageSwiper = new Swiper('.services_slider_image .swiper', {\n          allowTouchMove: false,\n          loop: false,\n          speed: 500,\n          effect: \"fade\",\n        });\n    \n      \n        //console.log('[CustomSlider] Swipers initialized:', servicesContentSwiper, servicesImageSwiper);\n      \n        // Navigation buttons\n        const servicesButtons = document.querySelectorAll('#services_slider .slider-navigation-buttons .button');\n        //console.log(`[CustomSlider] Found ${servicesButtons.length} navigation buttons:`, servicesButtons);\n      \n        servicesButtons.forEach((button, index) => {\n          button.addEventListener('click', (e) => {\n            e.preventDefault();\n            //console.log(`[CustomSlider] Button ${index + 1} clicked → going to slide ${index}`);\n      \n            // Go to the matching slide in both Swipers\n            servicesContentSwiper.slideTo(index);\n            servicesImageSwiper.slideTo(index);\n      \n            // Active state handling\n            servicesButtons.forEach(btn => btn.classList.remove('active'));\n            button.classList.add('active');\n          });\n        });\n      \n        // Set first button as active\n        if (servicesButtons.length > 0) {\n          //console.log('[CustomSlider] Setting first button as active.');\n          servicesButtons[0].classList.add('active');\n        }\n    \n    \n    \n    \n    \n    \n    \n        // Initialize your Swipers\n          const industriesContentSwiper = new Swiper('.industries_slider_content .swiper', {\n            loop: false,\n            speed: 500,\n            effect: \"fade\",\n            allowTouchMove: false,\n          });\n        \n          const industriesCtaButtonSwiper = new Swiper('.industries_slider_cta_buttons .swiper', {\n            loop: false,\n            speed: 500,\n            effect: \"fade\",\n            allowTouchMove: false,\n          });\n    \n          const industriesCtaButtonSwiperMobile = new Swiper('.industries_slider_cta_buttons_mobile .swiper', {\n            loop: false,\n            speed: 500,\n            effect: \"fade\",\n            allowTouchMove: false,\n          });\n        \n          //console.log('[CustomSlider] Swipers initialized:', industriesContentSwiper, industriesCtaButtonSwiper);\n        \n          // Navigation buttons\n          const industriesButtons = document.querySelectorAll('#industries_slider .slider-navigation-buttons .button');\n          //console.log(`[CustomSlider] Found ${industriesButtons.length} navigation buttons:`, industriesButtons);\n        \n          industriesButtons.forEach((button, index) => {\n            button.addEventListener('click', (e) => {\n              e.preventDefault();\n              //console.log(`[CustomSlider] Button ${index + 1} clicked → going to slide ${index}`);\n        \n              // Go to the matching slide in both Swipers\n              industriesContentSwiper.slideTo(index);\n              industriesCtaButtonSwiper.slideTo(index);\n              industriesCtaButtonSwiperMobile.slideTo(index);\n        \n              // Active state handling\n              industriesButtons.forEach(btn => btn.classList.remove('active'));\n              button.classList.add('active');\n            });\n          });\n        \n          // Set first button as active\n          if (industriesButtons.length > 0) {\n            //console.log('[CustomSlider] Setting first button as active.');\n            industriesButtons[0].classList.add('active');\n          }\n\n\n  }\n\n  });\n  \n\n"],"names":["homepageHero","console","log","windowWidth","window","innerWidth","hero","document","getElementById","dataVideoLg","getAttribute","dataVideoSm","existingVideoContainer","querySelector","videoContainer","createElement","classList","add","prepend","videoElement","setAttribute","appendChild","setTimeout","sourceElement","addEventListener","home","servicesContentSwiper","Swiper","allowTouchMove","speed","servicesImageSwiper","loop","effect","servicesButtons","querySelectorAll","forEach","button","index","e","preventDefault","slideTo","btn","remove","length","industriesContentSwiper","industriesCtaButtonSwiper","industriesCtaButtonSwiperMobile","industriesButtons"],"sourceRoot":""}